Index: Utils.java
===================================================================
--- Utils.java	(revision 844)
+++ Utils.java	(working copy)
@@ -16,13 +16,8 @@
 
 package org.modsl.core.util;
 
-import java.io.BufferedInputStream;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.PrintWriter;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
+//import java.util.regex.Matcher;
+//import java.util.regex.Pattern;
 
 /**
  * Miscellaneous utils.
@@ -31,57 +26,20 @@
 public class Utils {
 
     /**
-     * Read string from file
-     * @param name file name
-     * @return string
-     * @throws IOException
-     */
-    public static String fromFile(String name) throws IOException {
-        StringBuilder sb = new StringBuilder();
-        ClassLoader cl = Thread.currentThread().getContextClassLoader();
-        InputStream is = cl.getResourceAsStream(name);
-        if (is == null) {
-            cl = Utils.class.getClassLoader();
-            is = cl.getResourceAsStream(name);
-        }
-        if (is == null) {
-            return "";
-        }
-        BufferedInputStream in = new BufferedInputStream(is);
-        int c;
-        while ((c = in.read()) != -1) {
-            sb.append((char) c);
-        }
-        in.close();
-        return sb.toString();
-    }
-
-    /**
      * Find # of occurences of the given pattern in the given string
      * @param string
      * @param pattern
      * @return number of occurences
      */
-    public static int matchCount(String string, String pattern) {
-        Matcher m = Pattern.compile(pattern).matcher(string);
-        int count = 0;
-        while (m.find()) {
-            count++;
-        }
-        return count;
-    }
+//    public static int matchCount(String string, String pattern) {
+//        Matcher m = Pattern.compile(pattern).matcher(string);
+//        int count = 0;
+//        while (m.find()) {
+//            count++;
+//        }
+//        return count;
+//    }
 
-    /**
-     * Write string to file
-     * @param fileName file name
-     * @param txt string to write to file
-     * @throws IOException
-     */
-    public static void toFile(String fileName, String txt) throws IOException {
-        PrintWriter pw = new PrintWriter(new FileWriter(fileName));
-        pw.print(txt);
-        pw.close();
-    }
 
     /**
      * Strips surrounding double quotes from the string
